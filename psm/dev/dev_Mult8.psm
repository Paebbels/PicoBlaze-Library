; EMACS settings: -*-  tab-width: 2; indent-tabs-mode: t -*-
; vim: tabstop=2:shiftwidth=2:noexpandtab
; kate: tab-width 2; replace-tabs off; indent-width 2;
; 
; ==============================================================================
; Authors:					Patrick Lehmann
;
; Assembler-Code:		Multiplier 8 bit
; 
; Description:
; ------------------------------------
;	public functions:
;		__DEV_Mult8_Mult8
;
; Aliases:
;		__DEV_Mult_Mult8
;   
; License:
; ==============================================================================
; Copyright 2012-2015 Patrick Lehmann - Dresden, Germany
; 
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
; 
;		http://www.apache.org/licenses/LICENSE-2.0
; 
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
; ==============================================================================
;
;
; Co-Processor macros
; ===============================================
;PRAGMA function __DEV_Mult8_Mult8 begin
;;		Requires:
;;			Arg0 : Factor A
;;			Arg1 : Factor B
;;		Returns:
;;			Arg0 : Product R(7:0)
;;			Arg1 : Product R(15:8)
;;			
__DEV_Mult_Mult8:
__DEV_Mult8_Mult8:						OUTPUT	REG_ARG_0,		OPORT_MULT8_OPERANDA0		;	Write arg0 to Reg A0
															OUTPUT	REG_ARG_1,		OPORT_MULT8_OPERANDB0		;	Write arg1 to Reg B0
															LOAD		REG_ARG_0,		REG_ARG_0								; NOP
															LOAD		REG_ARG_0,		REG_ARG_0								; NOP
															INPUT		REG_ARG_0,		IPORT_MULT8_RESULT0			;	Write Reg R0 to arg0
															INPUT		REG_ARG_1,		IPORT_MULT8_RESULT1			;	Write Reg R1 to arg1
															RETURN
;PRAGMA function end
